{"version":3,"file":"static/js/793.8a7fbaf0.chunk.js","mappings":"kSACA,EAA8B,kCAA9B,EAAyE,6B,SCuHzE,EAxGqB,WAAO,IAADA,EAAAC,EACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA8BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEpBG,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAA2B,QAArBrB,EAAe,QAAfC,EAACiB,EAASI,aAAK,IAAArB,OAAA,EAAdA,EAAgBsB,YAAI,IAAAvB,EAAAA,EAAI,MAEnDwB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACjB/B,EAAQ,CAAD6B,EAAAE,KAAA,eAAAF,EAAAG,OAAA,iBAES,OAFTH,EAAAC,KAAA,EAEVnB,GAAa,GAAMkB,EAAAE,KAAA,GACQE,EAAAA,EAAAA,IAAiBjC,GAAS,KAAD,EAA9C4B,EAAYC,EAAAK,KAClB3B,EAASqB,GACTb,EAAW,MAAMc,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAEjBd,EAAWc,EAAAM,GAAMC,SAAS,QAEN,OAFMP,EAAAC,KAAA,GAE1BnB,GAAa,GAAOkB,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAX,EAAA,yBAEvB,kBAZoB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAarBjB,GACF,GAAG,CAACvB,IAEJ,IAAAyC,EACEnC,GAAS,CAAC,EADJoC,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAAcC,EAAYJ,EAAZI,aAAcC,EAAML,EAANK,OAAQC,EAAWN,EAAXM,YAGvDC,EAAQC,KAAKC,MAA6B,GAAvBC,OAAOP,IAC1BQ,EAAYL,EAAW,GAAAM,OACtBC,EAAAA,GAAcD,OAAGN,GACpBQ,EAEJ,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGhD,IAAaiD,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACpB9C,IACC6C,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8EAKLF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIhD,GAAaJ,IACbkD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,GAAI5C,EAAY6C,QAAQL,SAAC,aAC/BF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKK,IAAG,GAAAX,OAAKD,GAAaa,IAAKvB,EAAOwB,MAAM,SAC5CV,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACGhB,EAAM,KAAGG,EAAasB,MAAM,EAAG,GAAG,QAErCR,EAAAA,EAAAA,KAAA,KAAAD,SAAA,eAAAL,OAAmBL,EAAK,SACxBQ,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIf,QAENa,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIZ,EAAOsB,KAAI,SAAAC,GAAO,OAAAA,EAAJC,IAAe,IAAEC,KAAK,oBAKhDf,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4BACHF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACa,EAAAA,GAAO,CACNV,GAAG,OACH1C,OAAKqD,EAAAA,EAAAA,GAAA,GAAOzD,EAASI,OACrBsD,UAAW,SAAAC,GAAA,IAAGC,EAAQD,EAARC,SAAQ,SAAAvB,OACjBwB,EAAe,KAAAxB,OAAIuB,EAAWC,EAAa,GAAE,EACjDnB,SACF,YAIHC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACa,EAAAA,GAAO,CACNV,GAAG,UACH1C,OAAKqD,EAAAA,EAAAA,GAAA,GAAOzD,EAASI,OACrBsD,UAAW,SAAAI,GAAA,IAAGF,EAAQE,EAARF,SAAQ,SAAAvB,OACjBwB,EAAe,KAAAxB,OAAIuB,EAAWC,EAAa,GAAE,EACjDnB,SACF,wBAQXC,EAAAA,EAAAA,KAACoB,EAAAA,SAAQ,CAAArB,UACPC,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,WAKjB,C,wMCnHAC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAiDC,EAAAA,EAE1C,IAAMC,EAAqB,eAAA3D,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAyD,EAAAC,EAAA,OAAA3D,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACa,MAApC,qCAAoCF,EAAAE,KAAA,EACzBkD,EAAAA,EAAAA,IADX,sCAC0B,KAAD,EAAzB,OAAyBG,EAAAvD,EAAAK,KAA7BmD,EAAID,EAAJC,KAAIxD,EAAAG,OAAA,SAELqD,EAAKC,SAAO,wBAAAzD,EAAAS,OAAA,GAAAX,EAAA,KACpB,kBALiC,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAOrBP,EAAgB,eAAAQ,GAAAhB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA6D,EAAMvF,GAAO,IAAAwF,EAAAC,EAAAJ,EAAA,OAAA3D,IAAAA,MAAA,SAAAgE,GAAA,cAAAA,EAAA5D,KAAA4D,EAAA3D,MAAA,OACd,OAAvByD,EAAG,UAAAnC,OAAarD,EAAO,mBAAA0F,EAAA3D,KAAA,EACNkD,EAAAA,EAAAA,IAAUO,GAAK,KAAD,EAAzB,OAAyBC,EAAAC,EAAAxD,KAA7BmD,EAAII,EAAJJ,KAAIK,EAAA1D,OAAA,SAELqD,GAAI,wBAAAK,EAAApD,OAAA,GAAAiD,EAAA,KACZ,gBAL4BI,GAAA,OAAAlD,EAAAF,MAAA,KAAAC,UAAA,KAOhBoD,EAAmB,eAAAvB,GAAA5C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAmE,EAAMC,GAAW,IAAAN,EAAAO,EAAAV,EAAA,OAAA3D,IAAAA,MAAA,SAAAsE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,OACJ,OAAxCyD,EAAG,uBAAAnC,OAA0ByC,GAAWE,EAAAjE,KAAA,EACvBkD,EAAAA,EAAAA,IAAUO,GAAK,KAAD,EAAzB,OAAyBO,EAAAC,EAAA9D,KAA7BmD,EAAIU,EAAJV,KAAIW,EAAAhE,OAAA,SAELqD,EAAKC,SAAO,wBAAAU,EAAA1D,OAAA,GAAAuD,EAAA,KACpB,gBAL+BI,GAAA,OAAA5B,EAAA9B,MAAA,KAAAC,UAAA,KAOnB0D,EAAgB,eAAAvB,GAAAlD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAyE,EAAMnG,GAAO,IAAAwF,EAAAY,EAAAf,EAAA,OAAA3D,IAAAA,MAAA,SAAA2E,GAAA,cAAAA,EAAAvE,KAAAuE,EAAAtE,MAAA,OACd,OAAvByD,EAAG,UAAAnC,OAAarD,EAAO,2BAAAqG,EAAAtE,KAAA,EACNkD,EAAAA,EAAAA,IAAUO,GAAK,KAAD,EAAzB,OAAyBY,EAAAC,EAAAnE,KAA7BmD,EAAIe,EAAJf,KAAIgB,EAAArE,OAAA,SAELqD,EAAKiB,MAAI,wBAAAD,EAAA/D,OAAA,GAAA6D,EAAA,KACjB,gBAL4BI,GAAA,OAAA5B,EAAApC,MAAA,KAAAC,UAAA,KAOhBgE,EAAc,eAAA1B,GAAArD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA+E,EAAMzG,GAAO,IAAAwF,EAAAkB,EAAArB,EAAA,OAAA3D,IAAAA,MAAA,SAAAiF,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,OACZ,OAAvByD,EAAG,UAAAnC,OAAarD,EAAO,2BAAA2G,EAAA5E,KAAA,EACNkD,EAAAA,EAAAA,IAAUO,GAAK,KAAD,EAAzB,OAAyBkB,EAAAC,EAAAzE,KAA7BmD,EAAIqB,EAAJrB,KAAIsB,EAAA3E,OAAA,SAELqD,EAAKC,SAAO,wBAAAqB,EAAArE,OAAA,GAAAmE,EAAA,KACpB,gBAL0BG,GAAA,OAAA9B,EAAAvC,MAAA,KAAAC,UAAA,I,6EClCpB,IAAM0C,EACX,6NAEW5B,EAAiB,iC","sources":["pages/movieDetails/MovieDetails.module.css","pages/movieDetails/MovieDetails.jsx","services/api.js","utils/constants.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"detailsLink\":\"MovieDetails_detailsLink__NgjUV\",\"active\":\"MovieDetails_active__+MInO\"};","import { Suspense, useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { Loader } from 'components/loader/Loader';\n\nimport { requestMovieById } from 'services/api';\nimport { IMAGE_URL_BASE } from 'utils/constants';\nimport default_image from '../../images/default-featured-image.png.jpg';\n\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(null);\n\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      if (!movieId) return;\n      try {\n        setIsLoading(true);\n        const movieDetails = await requestMovieById(movieId);\n        setMovie(movieDetails);\n        setIsError(null);\n      } catch (error) {\n        setIsError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovieDetails();\n  }, [movieId]);\n\n  const { title, overview, vote_average, release_date, genres, poster_path } =\n    movie || {};\n\n  const score = Math.round(Number(vote_average) * 10);\n  const imagePath = poster_path\n    ? `${IMAGE_URL_BASE}${poster_path}`\n    : default_image;\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {isError && (\n        <p>\n          Sorry... Some error occured while loading movie. Please try again\n          later.\n        </p>\n      )}\n      <div>\n        {!isLoading && movie && (\n          <div>\n            <Link to={backLinkRef.current}>Go back</Link>\n            <div>\n              <img src={`${imagePath}`} alt={title} width=\"100\" />\n              <div>\n                <h2>\n                  {title} ({release_date.slice(0, 4)})\n                </h2>\n                <p>{`User score: ${score} %`}</p>\n                <ul>\n                  <li>\n                    <h3>Overview</h3>\n                    <p>{overview}</p>\n                  </li>\n                  <li>\n                    <h4>Genres</h4>\n                    <p>{genres.map(({ name }) => name).join(' ')}</p>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div>\n              <p>Additional information</p>\n              <ul>\n                <li>\n                  <NavLink\n                    to=\"cast\"\n                    state={{ ...location.state }}\n                    className={({ isActive }) =>\n                      `${css.detailsLink} ${isActive ? css.active : ''}`\n                    }\n                  >\n                    Cast\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink\n                    to=\"reviews\"\n                    state={{ ...location.state }}\n                    className={({ isActive }) =>\n                      `${css.detailsLink} ${isActive ? css.active : ''}`\n                    }\n                  >\n                    Reviews\n                  </NavLink>\n                </li>\n              </ul>\n            </div>\n          </div>\n        )}\n        <Suspense>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport { AUTH_TOKEN } from 'utils/constants';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\nexport const requestTrendingMovies = async () => {\n  const url = '/trending/movie/day?language=en-US';\n  const { data } = await axios.get(url);\n\n  return data.results;\n};\n\nexport const requestMovieById = async movieId => {\n  const url = `/movie/${movieId}?language=en-US`;\n  const { data } = await axios.get(url);\n\n  return data;\n};\n\nexport const requestMovieByQuery = async searchQuery => {\n  const url = `/search/movie?query=${searchQuery}`;\n  const { data } = await axios.get(url);\n\n  return data.results;\n};\n\nexport const requestMovieCast = async movieId => {\n  const url = `/movie/${movieId}/credits?language=en-US`;\n  const { data } = await axios.get(url);\n\n  return data.cast;\n};\n\nexport const requestReviews = async movieId => {\n  const url = `/movie/${movieId}/reviews?language=en-US`;\n  const { data } = await axios.get(url);\n\n  return data.results;\n};\n","export const AUTH_TOKEN =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMjgyODliZWYxZTEzYTJiZjE5N2ZjMDZhZmUxMjMzNiIsInN1YiI6IjY1OWZlNDcxM2NkMTJjMDEyZGYwNjY5YiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.yA_qEgcZekO0ca6PfwxFIzMCuYarZwWINgSQqc-fQgI';\n\nexport const IMAGE_URL_BASE = 'https://image.tmdb.org/t/p/w500';\n"],"names":["_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","isError","setIsError","location","useLocation","backLinkRef","useRef","state","from","useEffect","getMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieDetails","_context","prev","next","abrupt","requestMovieById","sent","t0","message","finish","stop","apply","arguments","_ref2","title","overview","vote_average","release_date","genres","poster_path","score","Math","round","Number","imagePath","concat","IMAGE_URL_BASE","default_image","_jsxs","_Fragment","children","_jsx","Loader","Link","to","current","src","alt","width","slice","map","_ref3","name","join","NavLink","_objectSpread","className","_ref4","isActive","css","_ref5","Suspense","Outlet","axios","AUTH_TOKEN","requestTrendingMovies","_yield$axios$get","data","results","_callee2","url","_yield$axios$get2","_context2","_x","requestMovieByQuery","_callee3","searchQuery","_yield$axios$get3","_context3","_x2","requestMovieCast","_callee4","_yield$axios$get4","_context4","cast","_x3","requestReviews","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}